name: Docker Image Build

on:
    push:
      paths:
        - ".github/workflows/matrix-build.yml"
        - "rules-client/**"
    workflow_dispatch:

env:
  IMAGE_NAME: rules-client
  REGISTRY: quay.io  # Change to your registry

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
        runs-on: ["ubuntu-latest", "macos-latest"]
        include:
          - python-version: "3.11"
            tag-suffix: "-py311"
          - python-version: "3.12"
            tag-suffix: "-py312"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ secrets.QUAY_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest${{ matrix.tag-suffix }}
            type=raw,value=v1.0.${{ github.run_number }}${{ matrix.tag-suffix }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: rules-client/
          file: rules-client/Dockerfile
          build-args: |
            PYTHON_VERSION=${{ matrix.python-version }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}