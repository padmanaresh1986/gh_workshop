name: CI Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: #manual


jobs:
  compile-ubuntu:
    name: Compile Code On Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
  
      - name: Compile Java Code
        working-directory: rules-engine
        run: |
            chmod +x gradlew
            ./gradlew classes

  compile-macos:
    name: Compile Code On MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
  
      - name: Compile Java Code
        working-directory: rules-engine
        run: |
            chmod +x gradlew
            ./gradlew classes
    
  test:
    name: Run Unit Tests
    needs: [compile-ubuntu,compile-macos]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run Gradle Tests
        working-directory: rules-engine
        run: |
            chmod +x gradlew
            ./gradlew test

  build:
    name: Build Artifact
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Artifact
        working-directory: rules-engine
        run: |
            chmod +x gradlew
            ./gradlew build -x test

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: rule-engine-artifact
          path: rules-engine/build/libs/*.jar

  docker-build:
    name: Build and Push Docker Image
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: rule-engine-artifact
          path: target/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: quay.io/${{ secrets.QUAY_USERNAME }}/business-rule-processor
          tags: |
            latest
            v1.0.${{ github.run_number }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  mutation-test:
    name: Mutation Testing with PITest
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run PITest Mutation Analysis
        run: |
          ./gradlew test pitest

      - name: Upload PITest Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pitest-report
          path: build/reports/pitest/**  # Gradle PITest plugin default output directory

  code-coverage-test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Run Tests with Coverage
        run: ./gradlew clean test jacocoTestReport

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/test/html/**

      - name: Upload JaCoCo XML
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-xml
          path: build/reports/jacoco/test/jacocoTestReport.xml
